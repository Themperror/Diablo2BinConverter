#pragma once

#include "util.h"

struct ItemsTxt //size = 0x1A8, Valid for Weapons, Armors, Misc.txts
{
	char			szflippyfile[32];		//0x00
	char			szinvfile[32];			//0x20
	char			szuniqueinvfile[32];	//0x40
	char			szsetinvfile[32];		//0x60
	union {
		uint32_t	dwcode;					//0x80
		char		szcode[4];				//0x80
	};
	union {
		uint32_t	dwnormcode;					//0x84
		char		sznormcode[4];				//0x84
	};
	union {
		uint32_t	dwubercode;					//0x88
		char		szubercode[4];				//0x88
	};
	union {
		uint32_t	dwultracode;				//0x8C
		char		szultracode[4];				//0x8C
	};
	uint32_t		dwalternategfx;			//0x90
	uint32_t		dwpSpell;				//0x94
	uint16_t		wstate;					//0x98
	uint16_t		wcstate1;				//0x9A
	uint16_t		wcstate2;				//0x9C
	uint16_t		wstat1;					//0x9E
	uint16_t		wstat2;					//0xA0
	uint16_t		wstat3;					//0xA2
	uint32_t		dwcalc1;				//0xA4
	uint32_t		dwcalc2;				//0xA8
	uint32_t		dwcalc3;				//0xAC
	uint32_t		dwlen;					//0xB0
	uint16_t		bspelldesc;				//0xB4
	uint16_t		wspelldescstr;			//0xB6
	uint32_t		dwspelldesccalc;		//0xB8
	uint32_t		dwBetterGem;			//0xBC
	uint32_t		dwwclass;				//0xC0
	uint32_t		dw2handedwclass;		//0xC4
	uint32_t		dwTMogType;				//0xC8
	uint32_t		dwminac;				//0xCC
	uint32_t		dwmaxac;				//0xD0
	uint32_t		dwgamblecost;			//0xD4
	int32_t			dwspeed;				//0xD8
	uint32_t		dwbitfield1;			//0xDC
	uint32_t		dwcost;					//0xE0
	uint32_t		dwminstack;				//0xE4
	uint32_t		dwmaxstack;				//0xE8
	uint32_t		dwspawnstack;			//0xEC
	uint32_t		dwgemoffset;			//0xF0
	uint16_t		wnamestr;				//0xF4
	uint16_t		wversion;				//0xF6
	uint16_t		wautoprefix;			//0xF8
	uint16_t		wmissiletype;			//0xFA
	uint8_t			brarity;				//0xFC
	uint8_t			blevel;					//0xFD
	uint8_t			bmindam;				//0xFE
	uint8_t			bmaxdam;				//0xFF
	uint8_t			bminmisdam;				//0x100
	uint8_t			bmaxmisdam;				//0x101
	uint8_t			b2handmindam;			//0x102
	uint8_t			b2handmaxdam;			//0x103
	uint16_t		brangeadder;			//0x104
	uint16_t		wstrbonus;				//0x106
	uint16_t		wdexbonus;				//0x108
	uint16_t		wreqstr;				//0x10A
	uint16_t		wreqdex;				//0x10C
	uint8_t			babsorbs;				//0x10E
	uint8_t			binvwidth;				//0x10F
	uint8_t			binvheight;				//0x110
	uint8_t			bblock;					//0x111
	uint8_t			bdurability;			//0x112
	uint8_t			bnodurability;			//0x113
	uint8_t			bmissile;				//0x114
	uint8_t			bcomponent;				//0x115
	uint8_t			brArm;					//0x116
	uint8_t			blArm;					//0x117
	uint8_t			btorso;					//0x118
	uint8_t			blegs;					//0x119
	uint8_t			brspad;					//0x11A
	uint8_t			blspad;					//0x11B
	uint8_t			b2handed;				//0x11C
	uint8_t			buseable;				//0x11D
	uint16_t		wtype;					//0x11E
	uint16_t		wtype2;					//0x120
	uint16_t		bsubtype;				//0x122
	uint16_t		wdropsound;				//0x124
	uint16_t		wusesound;				//0x126
	uint8_t			bdropsfxframe;			//0x128
	uint8_t			bunique;				//0x129
	uint8_t			bquest;					//0x12A
	uint8_t			bquestdiffcheck;		//0x12B
	uint8_t			btransparent;			//0x12C
	uint8_t			btranstbl;				//0x12D
	uint8_t 		_1;						//0x12E
	uint8_t			blightradius;			//0x12F
	uint8_t			bbelt;					//0x130
	uint8_t			bautobelt;				//0x131
	uint8_t			bstackable;				//0x132
	uint8_t			bspawnable;				//0x133
	uint8_t			bspellicon;				//0x134
	uint8_t			bdurwarning;			//0x135
	uint8_t			bqntwarning;			//0x136
	uint8_t			bhasinv;				//0x137
	uint8_t			bgemsockets;			//0x138
	uint8_t			bTransmogrify;			//0x139
	uint8_t			bTMogMin;				//0x13A
	uint8_t			bTMogMax;				//0x13B
	uint8_t			bhitclass;				//0x13C
	uint8_t			b1or2handed;			//0x13D
	uint8_t			bgemapplytype;			//0x13E
	uint8_t			blevelreq;				//0x13F
	uint8_t			bmagiclvl;				//0x140
	uint8_t			bTransform;				//0x141
	uint8_t			bInvTrans;				//0x142
	uint8_t			bcompactsave;			//0x143
	uint8_t			bSkipName;				//0x144
	uint8_t			bNameable;				//0x145
	uint8_t			bAkaraMin;				//0x146
	uint8_t			bGheedMin;				//0x147
	uint8_t			bCharsiMin;				//0x148
	uint8_t			bFaraMin;				//0x149
	uint8_t			bLysanderMin;			//0x14A
	uint8_t			bDrognanMin;			//0x14B
	uint8_t			bHraltiMin;				//0x14C
	uint8_t			bAlkorMin;				//0x14D
	uint8_t			bOrmusMin;				//0x14E
	uint8_t			bElzixMin;				//0x14F
	uint8_t			bAshearaMin;			//0x150
	uint8_t			bCainMin;				//0x151
	uint8_t			bHalbuMin;				//0x152
	uint8_t			bJamellaMin;			//0x153
	uint8_t			bMalahMin;				//0x154
	uint8_t			bLarzukMin;				//0x155
	uint8_t			bDrehyaMin;				//0x156
	uint8_t			bAkaraMax;				//0x157
	uint8_t			bGheedMax;				//0x158
	uint8_t			bCharsiMax;				//0x159
	uint8_t			bFaraMax;				//0x15A
	uint8_t			bLysanderMax;			//0x15B
	uint8_t			bDrognanMax;			//0x15C
	uint8_t			bHraltiMax;				//0x15D
	uint8_t			bAlkorMax;				//0x15E
	uint8_t			bOrmusMax;				//0x15F
	uint8_t			bElzixMax;				//0x160
	uint8_t			bAshearaMax;			//0x161
	uint8_t			bCainMax;				//0x162
	uint8_t			bHalbuMax;				//0x163
	uint8_t			bJamellaMax;			//0x164
	uint8_t			bMalahMax;				//0x165
	uint8_t			bLarzukMax;				//0x166
	uint8_t			bDrehyaMax;				//0x167
	uint8_t			bAkaraMagicMin;			//0x168
	uint8_t			bGheedMagicMin;			//0x169
	uint8_t			bCharsiMagicMin;		//0x16A
	uint8_t			bFaraMagicMin;			//0x16B
	uint8_t			bLysanderMagicMin;		//0x16C
	uint8_t			bDrognanMagicMin;		//0x16D
	uint8_t			bHraltiMagicMin;		//0x16E
	uint8_t			bAlkorMagicMin;			//0x16F
	uint8_t			bOrmusMagicMin;			//0x170
	uint8_t			bElzixMagicMin;			//0x171
	uint8_t			bAshearaMagicMin;		//0x172
	uint8_t			bCainMagicMin;			//0x173
	uint8_t			bHalbuMagicMin;			//0x174
	uint8_t			bJamellaMagicMin;		//0x175
	uint8_t			bMalahMagicMin;			//0x176
	uint8_t			bLarzukMagicMin;		//0x177
	uint8_t			bDrehyaMagicMin;		//0x178
	uint8_t			bAkaraMagicMax;			//0x179
	uint8_t			bGheedMagicMax;			//0x17A
	uint8_t			bCharsiMagicMax;		//0x17B
	uint8_t			bFaraMagicMax;			//0x17C
	uint8_t			bLysanderMagicMax;		//0x17D
	uint8_t			bDrognanMagicMax;		//0x17E
	uint8_t			bHraltiMagicMax;		//0x17F
	uint8_t			bAlkorMagicMax;			//0x180
	uint8_t			bOrmusMagicMax;			//0x181
	uint8_t			bElzixMagicMax;			//0x182
	uint8_t			bAshearaMagicMax;		//0x183
	uint8_t			bCainMagicMax;			//0x184
	uint8_t			bHalbuMagicMax;			//0x185
	uint8_t			bJamellaMagicMax;		//0x186
	uint8_t			bMalahMagicMax;			//0x187
	uint8_t			bLarzukMagicMax;		//0x188
	uint8_t			bDrehyaMagicMax;		//0x189
	uint8_t			bAkaraMagicLvl;			//0x18A
	uint8_t			bGheedMagicLvl;			//0x18B
	uint8_t			bCharsiMagicLvl;		//0x18C
	uint8_t			bFaraMagicLvl;			//0x18D
	uint8_t			bLysanderMagicLvl;		//0x18E
	uint8_t			bDrognanMagicLvl;		//0x18F
	uint8_t			bHraltiMagicLvl;		//0x190
	uint8_t			bAlkorMagicLvl;			//0x191
	uint8_t			bOrmusMagicLvl;			//0x192
	uint8_t			bElzixMagicLvl;			//0x193
	uint8_t			bAshearaMagicLvl;		//0x194
	uint8_t			bCainMagicLvl;			//0x195
	uint8_t			bHalbuMagicLvl;			//0x196
	uint8_t			bJamellaMagicLvl;		//0x197
	uint8_t			bMalahMagicLvl;			//0x198
	uint8_t			bLarzukMagicLvl;		//0x199
	uint16_t		bDrehyaMagicLvl;		//0x19A
	uint32_t		dwNightmareUpgrade;		//0x19C
	uint32_t		dwHellUpgrade;			//0x1A0
	uint8_t			bPermStoreItem;			//0x1A4
	uint8_t			bmultibuy;				//0x1A5
	uint16_t		_ALIGN;					//0x1A6
};


std::string UnpackItem(char* data, size_t fileSize)
{
	std::stringstream stream;
	int amountRows = 0;
	memcpy(&amountRows, data, sizeof(int));

	if (fileSize - 4 != (sizeof(ItemsTxt) * amountRows))
	{
		std::cout << "Data size doesnt match amount of items! Wanted: " << sizeof(ItemsTxt) * amountRows << "  Got: " << fileSize - 4 << std::endl;
		PauseExit();
	}
	else
	{
		//Oh god this is so horrible!

		stream << "szflippyfile";
		stream << '\t';
		stream << "szinvfile";
		stream << '\t';
		stream << "szuniqueinvfile";
		stream << '\t';
		stream << "szsetinvfile";
		stream << '\t';
		stream << "szcode";
		stream << '\t';
		stream << "swnormcode";
		stream << '\t';
		stream << "swubercode";
		stream << '\t';
		stream << "swultracode";
		stream << '\t';
		stream << "dwalternategfx";
		stream << '\t';
		stream << "dwpSpell";
		stream << '\t';
		stream << "wstate";
		stream << '\t';
		stream << "wcstate1";
		stream << '\t';
		stream << "wcstate2";
		stream << '\t';
		stream << "wstat1";
		stream << '\t';
		stream << "wstat2";
		stream << '\t';
		stream << "wstat3";
		stream << '\t';
		stream << "dwcalc1";
		stream << '\t';
		stream << "dwcalc2";
		stream << '\t';
		stream << "dwcalc3";
		stream << '\t';
		stream << "dwlen";
		stream << '\t';
		stream << "bspelldesc";
		stream << '\t';
		stream << "wspelldescstr";
		stream << '\t';
		stream << "dwspelldesccalc";
		stream << '\t';
		stream << "dwBetterGem";
		stream << '\t';
		stream << "dwwclass";
		stream << '\t';
		stream << "dw2handedwclass";
		stream << '\t';
		stream << "dwTMogType";
		stream << '\t';
		stream << "dwminac";
		stream << '\t';
		stream << "dwmaxac";
		stream << '\t';
		stream << "dwgamblecost";
		stream << '\t';
		stream << "dwspeed";
		stream << '\t';
		stream << "dwbitfield1";
		stream << '\t';
		stream << "dwcost";
		stream << '\t';
		stream << "dwminstack";
		stream << '\t';
		stream << "dwmaxstack";
		stream << '\t';
		stream << "dwspawnstack";
		stream << '\t';
		stream << "dwgemoffset";
		stream << '\t';
		stream << "wnamestr";
		stream << '\t';
		stream << "wversion";
		stream << '\t';
		stream << "wautoprefix";
		stream << '\t';
		stream << "wmissiletype";
		stream << '\t';
		stream << "brarity";
		stream << '\t';
		stream << "blevel";
		stream << '\t';
		stream << "bmindam";
		stream << '\t';
		stream << "bmaxdam";
		stream << '\t';
		stream << "bminmisdam";
		stream << '\t';
		stream << "bmaxmisdam";
		stream << '\t';
		stream << "b2handmindam";
		stream << '\t';
		stream << "b2handmaxdam";
		stream << '\t';
		stream << "brangeadder";
		stream << '\t';
		stream << "wstrbonus";
		stream << '\t';
		stream << "wdexbonus";
		stream << '\t';
		stream << "wreqstr";
		stream << '\t';
		stream << "wreqdex";
		stream << '\t';
		stream << "babsorbs";
		stream << '\t';
		stream << "binvwidth";
		stream << '\t';
		stream << "binvheight";
		stream << '\t';
		stream << "bblock";
		stream << '\t';
		stream << "bdurability";
		stream << '\t';
		stream << "bnodurability";
		stream << '\t';
		stream << "bmissile";
		stream << '\t';
		stream << "bcomponent";
		stream << '\t';
		stream << "brArm";
		stream << '\t';
		stream << "blArm";
		stream << '\t';
		stream << "btorso";
		stream << '\t';
		stream << "blegs";
		stream << '\t';
		stream << "brspad";
		stream << '\t';
		stream << "blspad";
		stream << '\t';
		stream << "b2handed";
		stream << '\t';
		stream << "buseable";
		stream << '\t';
		stream << "wtype";
		stream << '\t';
		stream << "wtype2";
		stream << '\t';
		stream << "bsubtype";
		stream << '\t';
		stream << "wdropsound";
		stream << '\t';
		stream << "wusesound";
		stream << '\t';
		stream << "bdropsfxframe";
		stream << '\t';
		stream << "bunique";
		stream << '\t';
		stream << "bquest";
		stream << '\t';
		stream << "bquestdiffcheck";
		stream << '\t';
		stream << "btransparent";
		stream << '\t';
		stream << "btranstbl";
		stream << '\t';
		stream << "_1";
		stream << '\t';
		stream << "blightradius";
		stream << '\t';
		stream << "bbelt";
		stream << '\t';
		stream << "bautobelt";
		stream << '\t';
		stream << "bstackable";
		stream << '\t';
		stream << "bspawnable";
		stream << '\t';
		stream << "bspellicon";
		stream << '\t';
		stream << "bdurwarning";
		stream << '\t';
		stream << "bqntwarning";
		stream << '\t';
		stream << "bhasinv";
		stream << '\t';
		stream << "bgemsockets";
		stream << '\t';
		stream << "bTransmogrify";
		stream << '\t';
		stream << "bTMogMin";
		stream << '\t';
		stream << "bTMogMax";
		stream << '\t';
		stream << "bhitclass";
		stream << '\t';
		stream << "b1or2handed";
		stream << '\t';
		stream << "bgemapplytype";
		stream << '\t';
		stream << "blevelreq";
		stream << '\t';
		stream << "bmagiclvl";
		stream << '\t';
		stream << "bTransform";
		stream << '\t';
		stream << "bInvTrans";
		stream << '\t';
		stream << "bcompactsave";
		stream << '\t';
		stream << "bSkipName";
		stream << '\t';
		stream << "bNameable";
		stream << '\t';
		stream << "bAkaraMin";
		stream << '\t';
		stream << "bGheedMin";
		stream << '\t';
		stream << "bCharsiMin";
		stream << '\t';
		stream << "bFaraMin";
		stream << '\t';
		stream << "bLysanderMin";
		stream << '\t';
		stream << "bDrognanMin";
		stream << '\t';
		stream << "bHraltiMin";
		stream << '\t';
		stream << "bAlkorMin";
		stream << '\t';
		stream << "bOrmusMin";
		stream << '\t';
		stream << "bElzixMin";
		stream << '\t';
		stream << "bAshearaMin";
		stream << '\t';
		stream << "bCainMin";
		stream << '\t';
		stream << "bHalbuMin";
		stream << '\t';
		stream << "bJamellaMin";
		stream << '\t';
		stream << "bMalahMin";
		stream << '\t';
		stream << "bLarzukMin";
		stream << '\t';
		stream << "bDrehyaMin";
		stream << '\t';
		stream << "bAkaraMax";
		stream << '\t';
		stream << "bGheedMax";
		stream << '\t';
		stream << "bCharsiMax";
		stream << '\t';
		stream << "bFaraMax";
		stream << '\t';
		stream << "bLysanderMax";
		stream << '\t';
		stream << "bDrognanMax";
		stream << '\t';
		stream << "bHraltiMax";
		stream << '\t';
		stream << "bAlkorMax";
		stream << '\t';
		stream << "bOrmusMax";
		stream << '\t';
		stream << "bElzixMax";
		stream << '\t';
		stream << "bAshearaMax";
		stream << '\t';
		stream << "bCainMax";
		stream << '\t';
		stream << "bHalbuMax";
		stream << '\t';
		stream << "bJamellaMax";
		stream << '\t';
		stream << "bMalahMax";
		stream << '\t';
		stream << "bLarzukMax";
		stream << '\t';
		stream << "bDrehyaMax";
		stream << '\t';
		stream << "bAkaraMagicMin";
		stream << '\t';
		stream << "bGheedMagicMin";
		stream << '\t';
		stream << "bCharsiMagicMin";
		stream << '\t';
		stream << "bFaraMagicMin";
		stream << '\t';
		stream << "bLysanderMagicMin";
		stream << '\t';
		stream << "bDrognanMagicMin";
		stream << '\t';
		stream << "bHraltiMagicMin";
		stream << '\t';
		stream << "bAlkorMagicMin";
		stream << '\t';
		stream << "bOrmusMagicMin";
		stream << '\t';
		stream << "bElzixMagicMin";
		stream << '\t';
		stream << "bAshearaMagicMin";
		stream << '\t';
		stream << "bCainMagicMin";
		stream << '\t';
		stream << "bHalbuMagicMin";
		stream << '\t';
		stream << "bJamellaMagicMin";
		stream << '\t';
		stream << "bMalahMagicMin";
		stream << '\t';
		stream << "bLarzukMagicMin";
		stream << '\t';
		stream << "bDrehyaMagicMin";
		stream << '\t';
		stream << "bAkaraMagicMax";
		stream << '\t';
		stream << "bGheedMagicMax";
		stream << '\t';
		stream << "bCharsiMagicMax";
		stream << '\t';
		stream << "bFaraMagicMax";
		stream << '\t';
		stream << "bLysanderMagicMax";
		stream << '\t';
		stream << "bDrognanMagicMax";
		stream << '\t';
		stream << "bHraltiMagicMax";
		stream << '\t';
		stream << "bAlkorMagicMax";
		stream << '\t';
		stream << "bOrmusMagicMax";
		stream << '\t';
		stream << "bElzixMagicMax";
		stream << '\t';
		stream << "bAshearaMagicMax";
		stream << '\t';
		stream << "bCainMagicMax";
		stream << '\t';
		stream << "bHalbuMagicMax";
		stream << '\t';
		stream << "bJamellaMagicMax";
		stream << '\t';
		stream << "bMalahMagicMax";
		stream << '\t';
		stream << "bLarzukMagicMax";
		stream << '\t';
		stream << "bDrehyaMagicMax";
		stream << '\t';
		stream << "bAkaraMagicLvl";
		stream << '\t';
		stream << "bGheedMagicLvl";
		stream << '\t';
		stream << "bCharsiMagicLvl";
		stream << '\t';
		stream << "bFaraMagicLvl";
		stream << '\t';
		stream << "bLysanderMagicLvl";
		stream << '\t';
		stream << "bDrognanMagicLvl";
		stream << '\t';
		stream << "bHraltiMagicLvl";
		stream << '\t';
		stream << "bAlkorMagicLvl";
		stream << '\t';
		stream << "bOrmusMagicLvl";
		stream << '\t';
		stream << "bElzixMagicLvl";
		stream << '\t';
		stream << "bAshearaMagicLvl";
		stream << '\t';
		stream << "bCainMagicLvl";
		stream << '\t';
		stream << "bHalbuMagicLvl";
		stream << '\t';
		stream << "bJamellaMagicLvl";
		stream << '\t';
		stream << "bMalahMagicLvl";
		stream << '\t';
		stream << "bLarzukMagicLvl";
		stream << '\t';
		stream << "bDrehyaMagicLvl";
		stream << '\t';
		stream << "dwNightmareUpgrade";
		stream << '\t';
		stream << "dwHellUpgrade";
		stream << '\t';
		stream << "bPermStoreItem";
		stream << '\t';
		stream << "bmultibuy";
		stream << '\n';


		std::vector<ItemsTxt> items;
		items.resize(amountRows);
		memcpy(items.data(), &data[4], sizeof(ItemsTxt) * amountRows);
		for (auto& item : items)
		{
			stream << item.szflippyfile;
			stream << '\t';
			stream << item.szinvfile;
			stream << '\t';
			stream << item.szuniqueinvfile;
			stream << '\t';
			stream << item.szsetinvfile;
			stream << '\t';
			stream << item.szcode;
			stream << '\t';
			stream << item.sznormcode;
			stream << '\t';
			stream << item.szubercode;
			stream << '\t';
			stream << item.szultracode;
			stream << '\t';
			stream << (uint32_t)item.dwalternategfx;
			stream << '\t';
			stream << (uint32_t)item.dwpSpell;
			stream << '\t';
			stream << (uint32_t)item.wstate;
			stream << '\t';
			stream << (uint32_t)item.wcstate1;
			stream << '\t';
			stream << (uint32_t)item.wcstate2;
			stream << '\t';
			stream << (uint32_t)item.wstat1;
			stream << '\t';
			stream << (uint32_t)item.wstat2;
			stream << '\t';
			stream << (uint32_t)item.wstat3;
			stream << '\t';
			stream << (uint32_t)item.dwcalc1;
			stream << '\t';
			stream << (uint32_t)item.dwcalc2;
			stream << '\t';
			stream << (uint32_t)item.dwcalc3;
			stream << '\t';
			stream << (uint32_t)item.dwlen;
			stream << '\t';
			stream << (uint32_t)item.bspelldesc;
			stream << '\t';
			stream << (uint32_t)item.wspelldescstr;
			stream << '\t';
			stream << (uint32_t)item.dwspelldesccalc;
			stream << '\t';
			stream << (uint32_t)item.dwBetterGem;
			stream << '\t';
			stream << (uint32_t)item.dwwclass;
			stream << '\t';
			stream << (uint32_t)item.dw2handedwclass;
			stream << '\t';
			stream << (uint32_t)item.dwTMogType;
			stream << '\t';
			stream << (uint32_t)item.dwminac;
			stream << '\t';
			stream << (uint32_t)item.dwmaxac;
			stream << '\t';
			stream << (uint32_t)item.dwgamblecost;
			stream << '\t';
			stream << (int32_t)item.dwspeed;
			stream << '\t';
			stream << (uint32_t)item.dwbitfield1;
			stream << '\t';
			stream << (uint32_t)item.dwcost;
			stream << '\t';
			stream << (uint32_t)item.dwminstack;
			stream << '\t';
			stream << (uint32_t)item.dwmaxstack;
			stream << '\t';
			stream << (uint32_t)item.dwspawnstack;
			stream << '\t';
			stream << (uint32_t)item.dwgemoffset;
			stream << '\t';
			stream << (uint32_t)item.wnamestr;
			stream << '\t';
			stream << (uint32_t)item.wversion;
			stream << '\t';
			stream << (uint32_t)item.wautoprefix;
			stream << '\t';
			stream << (uint32_t)item.wmissiletype;
			stream << '\t';
			stream << (uint32_t)item.brarity;
			stream << '\t';
			stream << (uint32_t)item.blevel;
			stream << '\t';
			stream << (uint32_t)item.bmindam;
			stream << '\t';
			stream << (uint32_t)item.bmaxdam;
			stream << '\t';
			stream << (uint32_t)item.bminmisdam;
			stream << '\t';
			stream << (uint32_t)item.bmaxmisdam;
			stream << '\t';
			stream << (uint32_t)item.b2handmindam;
			stream << '\t';
			stream << (uint32_t)item.b2handmaxdam;
			stream << '\t';
			stream << (uint32_t)item.brangeadder;
			stream << '\t';
			stream << (uint32_t)item.wstrbonus;
			stream << '\t';
			stream << (uint32_t)item.wdexbonus;
			stream << '\t';
			stream << (uint32_t)item.wreqstr;
			stream << '\t';
			stream << (uint32_t)item.wreqdex;
			stream << '\t';
			stream << (uint32_t)item.babsorbs;
			stream << '\t';
			stream << (uint32_t)item.binvwidth;
			stream << '\t';
			stream << (uint32_t)item.binvheight;
			stream << '\t';
			stream << (uint32_t)item.bblock;
			stream << '\t';
			stream << (uint32_t)item.bdurability;
			stream << '\t';
			stream << (uint32_t)item.bnodurability;
			stream << '\t';
			stream << (uint32_t)item.bmissile;
			stream << '\t';
			stream << (uint32_t)item.bcomponent;
			stream << '\t';
			stream << (uint32_t)item.brArm;
			stream << '\t';
			stream << (uint32_t)item.blArm;
			stream << '\t';
			stream << (uint32_t)item.btorso;
			stream << '\t';
			stream << (uint32_t)item.blegs;
			stream << '\t';
			stream << (uint32_t)item.brspad;
			stream << '\t';
			stream << (uint32_t)item.blspad;
			stream << '\t';
			stream << (uint32_t)item.b2handed;
			stream << '\t';
			stream << (uint32_t)item.buseable;
			stream << '\t';
			stream << (uint32_t)item.wtype;
			stream << '\t';
			stream << (uint32_t)item.wtype2;
			stream << '\t';
			stream << (uint32_t)item.bsubtype;
			stream << '\t';
			stream << (uint32_t)item.wdropsound;
			stream << '\t';
			stream << (uint32_t)item.wusesound;
			stream << '\t';
			stream << (uint32_t)item.bdropsfxframe;
			stream << '\t';
			stream << (uint32_t)item.bunique;
			stream << '\t';
			stream << (uint32_t)item.bquest;
			stream << '\t';
			stream << (uint32_t)item.bquestdiffcheck;
			stream << '\t';
			stream << (uint32_t)item.btransparent;
			stream << '\t';
			stream << (uint32_t)item.btranstbl;
			stream << '\t';
			stream << (uint32_t)item._1;
			stream << '\t';
			stream << (uint32_t)item.blightradius;
			stream << '\t';
			stream << (uint32_t)item.bbelt;
			stream << '\t';
			stream << (uint32_t)item.bautobelt;
			stream << '\t';
			stream << (uint32_t)item.bstackable;
			stream << '\t';
			stream << (uint32_t)item.bspawnable;
			stream << '\t';
			stream << (uint32_t)item.bspellicon;
			stream << '\t';
			stream << (uint32_t)item.bdurwarning;
			stream << '\t';
			stream << (uint32_t)item.bqntwarning;
			stream << '\t';
			stream << (uint32_t)item.bhasinv;
			stream << '\t';
			stream << (uint32_t)item.bgemsockets;
			stream << '\t';
			stream << (uint32_t)item.bTransmogrify;
			stream << '\t';
			stream << (uint32_t)item.bTMogMin;
			stream << '\t';
			stream << (uint32_t)item.bTMogMax;
			stream << '\t';
			stream << (uint32_t)item.bhitclass;
			stream << '\t';
			stream << (uint32_t)item.b1or2handed;
			stream << '\t';
			stream << (uint32_t)item.bgemapplytype;
			stream << '\t';
			stream << (uint32_t)item.blevelreq;
			stream << '\t';
			stream << (uint32_t)item.bmagiclvl;
			stream << '\t';
			stream << (uint32_t)item.bTransform;
			stream << '\t';
			stream << (uint32_t)item.bInvTrans;
			stream << '\t';
			stream << (uint32_t)item.bcompactsave;
			stream << '\t';
			stream << (uint32_t)item.bSkipName;
			stream << '\t';
			stream << (uint32_t)item.bNameable;
			stream << '\t';
			stream << (uint32_t)item.bAkaraMin;
			stream << '\t';
			stream << (uint32_t)item.bGheedMin;
			stream << '\t';
			stream << (uint32_t)item.bCharsiMin;
			stream << '\t';
			stream << (uint32_t)item.bFaraMin;
			stream << '\t';
			stream << (uint32_t)item.bLysanderMin;
			stream << '\t';
			stream << (uint32_t)item.bDrognanMin;
			stream << '\t';
			stream << (uint32_t)item.bHraltiMin;
			stream << '\t';
			stream << (uint32_t)item.bAlkorMin;
			stream << '\t';
			stream << (uint32_t)item.bOrmusMin;
			stream << '\t';
			stream << (uint32_t)item.bElzixMin;
			stream << '\t';
			stream << (uint32_t)item.bAshearaMin;
			stream << '\t';
			stream << (uint32_t)item.bCainMin;
			stream << '\t';
			stream << (uint32_t)item.bHalbuMin;
			stream << '\t';
			stream << (uint32_t)item.bJamellaMin;
			stream << '\t';
			stream << (uint32_t)item.bMalahMin;
			stream << '\t';
			stream << (uint32_t)item.bLarzukMin;
			stream << '\t';
			stream << (uint32_t)item.bDrehyaMin;
			stream << '\t';
			stream << (uint32_t)item.bAkaraMax;
			stream << '\t';
			stream << (uint32_t)item.bGheedMax;
			stream << '\t';
			stream << (uint32_t)item.bCharsiMax;
			stream << '\t';
			stream << (uint32_t)item.bFaraMax;
			stream << '\t';
			stream << (uint32_t)item.bLysanderMax;
			stream << '\t';
			stream << (uint32_t)item.bDrognanMax;
			stream << '\t';
			stream << (uint32_t)item.bHraltiMax;
			stream << '\t';
			stream << (uint32_t)item.bAlkorMax;
			stream << '\t';
			stream << (uint32_t)item.bOrmusMax;
			stream << '\t';
			stream << (uint32_t)item.bElzixMax;
			stream << '\t';
			stream << (uint32_t)item.bAshearaMax;
			stream << '\t';
			stream << (uint32_t)item.bCainMax;
			stream << '\t';
			stream << (uint32_t)item.bHalbuMax;
			stream << '\t';
			stream << (uint32_t)item.bJamellaMax;
			stream << '\t';
			stream << (uint32_t)item.bMalahMax;
			stream << '\t';
			stream << (uint32_t)item.bLarzukMax;
			stream << '\t';
			stream << (uint32_t)item.bDrehyaMax;
			stream << '\t';
			stream << (uint32_t)item.bAkaraMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bGheedMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bCharsiMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bFaraMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bLysanderMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bDrognanMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bHraltiMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bAlkorMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bOrmusMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bElzixMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bAshearaMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bCainMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bHalbuMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bJamellaMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bMalahMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bLarzukMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bDrehyaMagicMin;
			stream << '\t';
			stream << (uint32_t)item.bAkaraMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bGheedMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bCharsiMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bFaraMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bLysanderMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bDrognanMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bHraltiMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bAlkorMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bOrmusMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bElzixMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bAshearaMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bCainMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bHalbuMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bJamellaMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bMalahMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bLarzukMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bDrehyaMagicMax;
			stream << '\t';
			stream << (uint32_t)item.bAkaraMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bGheedMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bCharsiMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bFaraMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bLysanderMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bDrognanMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bHraltiMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bAlkorMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bOrmusMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bElzixMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bAshearaMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bCainMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bHalbuMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bJamellaMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bMalahMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bLarzukMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.bDrehyaMagicLvl;
			stream << '\t';
			stream << (uint32_t)item.dwNightmareUpgrade;
			stream << '\t';
			stream << (uint32_t)item.dwHellUpgrade;
			stream << '\t';
			stream << (uint32_t)item.bPermStoreItem;
			stream << '\t';
			stream << (uint32_t)item.bmultibuy;
			stream << '\n';
		}
		return stream.str();
	}
	return "";
}